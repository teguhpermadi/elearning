<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Post_category extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Post_category_model');
        check_login();
    } 

    /*
     * Listing of post_category
     */
    function index()
    {
        $data['post_category'] = $this->Post_category_model->get_all_post_category();
        
        $data['_view'] = 'post_category/index';
        $this->load->view('template/header');
        $this->load->view('template/sidebar');
        $this->load->view('post_category/index',$data);
        $this->load->view('template/footer');
    }

    /*
     * Adding a new post_category
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('category_id','Category Id','required');
		$this->form_validation->set_rules('post_id','Post Id','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'post_id' => $this->input->post('post_id'),
				'category_id' => $this->input->post('category_id'),
            );
            
            $post_category_id = $this->Post_category_model->add_post_category($params);
            redirect('post_category/index');
        }
        else
        {
			$this->load->model('Post_model');
			$data['all_posts'] = $this->Post_model->get_all_posts();

			$this->load->model('Category_model');
			$data['all_category'] = $this->Category_model->get_all_category();
            
            $data['_view'] = 'post_category/add';
            $this->load->view('template/header');
            $this->load->view('template/sidebar');
            $this->load->view('post_category/add',$data);
            $this->load->view('template/footer');
        }
    }  

    /*
     * Editing a post_category
     */
    function edit($id)
    {   
        // check if the post_category exists before trying to edit it
        $data['post_category'] = $this->Post_category_model->get_post_category($id);
        
        if(isset($data['post_category']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('category_id','Category Id','required');
			$this->form_validation->set_rules('post_id','Post Id','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'post_id' => $this->input->post('post_id'),
					'category_id' => $this->input->post('category_id'),
                );

                $this->Post_category_model->update_post_category($id,$params);            
                redirect('post_category/index');
            }
            else
            {
				$this->load->model('Post_model');
				$data['all_posts'] = $this->Post_model->get_all_posts();

				$this->load->model('Category_model');
				$data['all_category'] = $this->Category_model->get_all_category();

                $data['_view'] = 'post_category/edit';
                $this->load->view('template/header');
                $this->load->view('template/sidebar');
                $this->load->view('post_category/edit',$data);
                $this->load->view('template/footer');
            }
        }
        else
            show_error('The post_category you are trying to edit does not exist.');
    } 

    /*
     * Deleting post_category
     */
    function remove($id)
    {
        $post_category = $this->Post_category_model->get_post_category($id);

        // check if the post_category exists before trying to delete it
        if(isset($post_category['id']))
        {
            $this->Post_category_model->delete_post_category($id);
            redirect('post_category/index');
        }
        else
            show_error('The post_category you are trying to delete does not exist.');
    }
    
}