<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
require 'vendor/autoload.php'; //untuk load semua library di folder vendor
use PhpOffice\PhpSpreadsheet\IOFactory;
use PhpOffice\PhpSpreadsheet\Helper\Sample;

class kelas extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Kelas_model');
        $this->load->model('Tag_model');
        check_login();
    }

    /*
     * Listing of kelas
     */
    function index()
    {
        $data['kelas'] = $this->Kelas_model->get_all_kelas();
        $data['script'] = "$('#tableKelas').DataTable()";

        $data['_view'] = 'kelas/index';
        $this->load->view('template/header');
        $this->load->view('template/sidebar');
        $this->load->view('kelas/index', $data);
        $this->load->view('template/footer', $data);
    }

    /*
     * Adding a new kelas
     */
    function add()
    {
        $data['script'] = "$('#tableKelas').DataTable()";
        $this->load->library('form_validation');

        $this->form_validation->set_rules('nama', 'Nama', 'required');
        $this->form_validation->set_rules('tingkat', 'Tingkat', 'required');
        $this->form_validation->set_rules('kode', 'Kode', 'required');

        if ($this->form_validation->run()) {
            $params = array(
                'tingkat' => $this->input->post('tingkat'),
                'nama' => $this->input->post('nama'),
                'kode' => $this->input->post('kode'),
            );

            $kelas_id = $this->Kelas_model->add_kelas($params);

            $tags = [
                'title' => $this->input->post('nama'),
                'slug' => str_replace(' ', '-', $this->input->post('kode')),
                'content' => $this->input->post('kode'),
            ];

            // tambah kelas ke dalam tabel tag
            $tag_id = $this->Tag_model->add_tag($tags);

            redirect('kelas/index');
        } else {
            $data['_view'] = 'kelas/add';
            $this->load->view('template/header');
            $this->load->view('template/sidebar');
            $this->load->view('kelas/add', $data);
            $this->load->view('template/footer', $data);
        }
    }

    /*
     * Editing a kelas
     */
    function edit($id)
    {
        $data['script'] = "$('#tableKelas').DataTable()";

        // check if the kelas exists before trying to edit it
        $data['kelas'] = $this->Kelas_model->get_kelas($id);

        if (isset($data['kelas']['id'])) {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('nama', 'Nama', 'required');
            $this->form_validation->set_rules('tingkat', 'Tingkat', 'required');
            $this->form_validation->set_rules('kode', 'Kode', 'required');

            if ($this->form_validation->run()) {
                $params = array(
                    'tingkat' => $this->input->post('tingkat'),
                    'nama' => $this->input->post('nama'),
                    'kode' => $this->input->post('kode'),
                );

                $this->Kelas_model->update_kelas($id, $params);

                // update kelas di tabel tags
                $tags = [
                    'title' => $this->input->post('nama'),
                    'slug' => str_replace(' ', '-', $this->input->post('kode')),
                    'content' => $this->input->post('kode'),
                ];

                $this->Tag_model->update_tag($id, $tags);

                redirect('kelas/index');
            } else {
                $data['_view'] = 'kelas/edit';
                $this->load->view('template/header');
                $this->load->view('template/sidebar');
                $this->load->view('kelas/edit', $data);
                $this->load->view('template/footer', $data);
            }
        } else
            show_error('The kelas you are trying to edit does not exist.');
    }

    /*
     * Deleting kelas
     */
    function remove($id)
    {
        $kelas = $this->Kelas_model->get_kelas($id);

        // check if the kelas exists before trying to delete it
        if (isset($kelas['id'])) {
            $this->Kelas_model->delete_kelas($id);
            // hapus tag
            $this->Tag_model->delete_tag($id);

            redirect('kelas/index');
        } else
            show_error('The kelas you are trying to delete does not exist.');
    }

    function download()
    {
        force_download('downloads/template kelas.xlsx', NULL);
    }

    function do_upload()
    {
        $config['upload_path']          = './uploads/';
        $config['allowed_types']        = 'xlsx|xls|csv';
        $config['file_name']            = 'template_kelas';
        $config['overwrite']            = TRUE;

        $this->load->library('upload', $config);

        if (!$this->upload->do_upload('userfile')) {
            $error = array('error' => $this->upload->display_errors());
            print_r($error);
        } else {
            $data_kelas = [];
            $data_tag = [];

            $data = array('upload_data' => $this->upload->data());
            // print_r($data);
            $helper = new Sample();
            $inputFileName = 'uploads/' . $data['upload_data']['file_name'];
            $helper->log('Loading file ' . pathinfo($inputFileName, PATHINFO_BASENAME) . ' using IOFactory to identify the format');
            $spreadsheet = IOFactory::load($inputFileName);
            $sheetData = $spreadsheet->getActiveSheet()->toArray(null, true, true, true);
            // baca data mulai dari baris ke dua
            for ($i = 2; $i < count($sheetData); $i++) {
                # code...
                // print_r($sheetData[$i]);
                // pecah datanya pada masing-masing kolom
                $data = [
                    'tingkat' => $sheetData[$i]['A'],
                    'nama' => $sheetData[$i]['B'],
                    'kode' => $sheetData[$i]['C'],
                ];

                array_push($data_kelas, $data);

                // tambah data tag
                $tag = [
                    'title' => $sheetData[$i]['B'],
                    'slug' => str_replace(' ', '-', $sheetData[$i]['C']),
                    'content' => $sheetData[$i]['C'],
                ];

                array_push($data_tag, $tag);

            }

            $this->db->insert_batch('kelas', $data_kelas);
            $this->db->insert_batch('tag', $data_tag);
            redirect('kelas');
        }
    }
}
