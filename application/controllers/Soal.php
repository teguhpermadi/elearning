<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Soal extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Soal_model');
    }

    /*
     * Listing of soal
     */
    function index()
    {
        $data['soal'] = $this->Soal_model->get_all_soal();

        $data['_view'] = 'soal/index';
        $this->load->view('template/header');
        $this->load->view('template/sidebar');
        $this->load->view('soal/index', $data);
        $this->load->view('template/footer', $data);
    }

    /*
     * Adding a new soal
     */
    function add()
    {
        $this->load->library('form_validation');

        $this->form_validation->set_rules('soal', 'Soal', 'required');
        $this->form_validation->set_rules('kunci', 'Kunci', 'required');
        $this->form_validation->set_rules('skor', 'Skor', 'required');

        if ($this->form_validation->run()) {
            $params = array(
                'mapel_id' => $this->input->post('mapel_id'),
                'tingkat' => $this->input->post('tingkat'),
                'jenis_soal' => $this->input->post('jenis_soal'),
                'aktif' => 1,
                'author_id' => user_info()['id'],
                'created_at' => datetime_now(),
                'soal' => $this->input->post('soal'),
                'skor' => $this->input->post('skor'),
                'petunjuk' => $this->input->post('petunjuk'),
                'kunci' => $this->input->post('kunci[]'),
                'pembahasan' => $this->input->post('pembahasan'),
                // 'opsi' => $this->input->post('opsi[]'),
            );

            echo json_encode($params);
            // $soal_id = $this->Soal_model->add_soal($params);
            // redirect('soal/index');
        } else {
            $this->load->model('Mapel_model');
            $data['all_mapel'] = $this->Soal_model->get_mapel();
            $data['js'] = $this->load->view('soal/js_add', $data, true);

            $data['_view'] = 'soal/add';
            $this->load->view('template/header');
            $this->load->view('template/sidebar');
            $this->load->view('soal/add', $data);
            $this->load->view('template/footer', $data);
        }
    }

    /*
     * Editing a soal
     */
    function edit($id)
    {
        // check if the soal exists before trying to edit it
        $data['soal'] = $this->Soal_model->get_soal($id);

        if (isset($data['soal']['id'])) {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('soal', 'Soal', 'required');
            $this->form_validation->set_rules('kunci', 'Kunci', 'required');
            $this->form_validation->set_rules('skor', 'Skor', 'required');

            if ($this->form_validation->run()) {
                $params = array(
                    'mapel_id' => $this->input->post('mapel_id'),
                    'tingkat' => $this->input->post('tingkat'),
                    'jenis_soal' => $this->input->post('jenis_soal'),
                    'aktif' => $this->input->post('aktif'),
                    'author_id' => $this->input->post('author_id'),
                    'created_at' => $this->input->post('created_at'),
                    'soal' => $this->input->post('soal'),
                    'skor' => $this->input->post('skor'),
                    'petunjuk' => $this->input->post('petunjuk'),
                    'kunci' => $this->input->post('kunci'),
                    'pembahasan' => $this->input->post('pembahasan'),
                    'opsi' => $this->input->post('opsi'),
                );

                $this->Soal_model->update_soal($id, $params);
                redirect('soal/index');
            } else {
                $this->load->model('Mapel_model');
                $data['all_mapel'] = $this->Mapel_model->get_all_mapel();
                $data['js'] = $this->load->view('soal/js_add', $data, true);

                $data['_view'] = 'soal/edit';
                $this->load->view('template/header');
                $this->load->view('template/sidebar');
                $this->load->view('soal/edit', $data);
                $this->load->view('template/footer', $data);
            }
        } else
            show_error('The soal you are trying to edit does not exist.');
    }

    /*
     * Deleting soal
     */
    function remove($id)
    {
        $soal = $this->Soal_model->get_soal($id);

        // check if the soal exists before trying to delete it
        if (isset($soal['id'])) {
            $this->Soal_model->delete_soal($id);
            redirect('soal/index');
        } else
            show_error('The soal you are trying to delete does not exist.');
    }
}
