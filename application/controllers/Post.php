<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Post extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Post_model');
        $this->load->model('Category_model');
        $this->load->model('Tag_model');

    }

    /*
     * Listing of posts
     */
    function index()
    {
        $data['posts'] = $this->Post_model->get_all_posts();

        $data['_view'] = 'post/index';
        $this->load->view('template/header');
        $this->load->view('template/sidebar');
        $this->load->view('post/index', $data);
        $this->load->view('template/footer');
    }

    /*
     * Adding a new post
     */
    function add()
    {
        $this->load->library('form_validation');

        $this->form_validation->set_rules('title', 'Title', 'required');
        $this->form_validation->set_rules('content', 'Content', 'required');
        $this->form_validation->set_rules('published_at', 'Published At', 'required');
        $this->form_validation->set_rules('category_id', 'Category', 'required');

        if ($this->form_validation->run()) {
            $params = array(
                'parrent_id' => $this->input->post('parrent_id'),
                'published' => $this->input->post('published'),
                'author_id' => user_info()['id'],
                'title' => $this->input->post('title'),
                // 'meta_title' => $this->input->post('meta_title'),
                // 'slug' => $this->input->post('slug'),
                // 'summary' => $this->input->post('summary'),
                'created_at' =>datetime_now(),
                'updated_at' => datetime_now(),
                'published_at' => $this->input->post('published_at'),
                'content' => $this->input->post('content'),
            );

            $post_id = $this->Post_model->add_post($params);

            // tambahkan kedalam tabel kategori
            $post_category = [
                'post_id' => $post_id,
                'category_id' => $this->input->post('category_id'),
            ];

            $category_id = $this->Category_model->add_category($post_category);

            // tambahkan kedalam tabel tag
            $post_tag = [
                'post_id' => $post_id,
                'tag_id' => $this->input->post('tag_id'),
            ];

            $post_tag_id = $this->Post_tag_model->add_post_tag($post_tag);


            redirect('post/index');
        } else {
            $data['all_posts'] = $this->Post_model->get_all_posts();
            $data['all_category'] = $this->Category_model->get_all_category();
            $data['all_tag'] = $this->Tag_model->get_all_tag();
            
            $data['_view'] = 'post/add';
            $this->load->view('template/header');
            $this->load->view('template/sidebar');
            $this->load->view('post/add', $data);
            $this->load->view('template/footer');
        }
    }

    /*
     * Editing a post
     */
    function edit($id)
    {
        // check if the post exists before trying to edit it
        $data['post'] = $this->Post_model->get_post($id);

        if (isset($data['post']['id'])) {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('title', 'Title', 'required');
            $this->form_validation->set_rules('content', 'Content', 'required');

            if ($this->form_validation->run()) {
                $params = array(
                    'parrent_id' => $this->input->post('parrent_id'),
                    'published' => $this->input->post('published'),
                    'author_id' => user_info()['id'],
                    'title' => $this->input->post('title'),
                    // 'meta_title' => $this->input->post('meta_title'),
                    // 'slug' => $this->input->post('slug'),
                    // 'summary' => $this->input->post('summary'),
                    // 'created_at' => $this->input->post('created_at'),
                    'updated_at' => datetime_now(),
                    'published_at' => $this->input->post('published_at'),
                    'content' => $this->input->post('content'),
                );

                $this->Post_model->update_post($id, $params);
                redirect('post/index');
            } else {
                $data['all_posts'] = $this->Post_model->get_all_posts();

                $data['_view'] = 'post/edit';
                $this->load->view('template/header');
                $this->load->view('template/sidebar');
                $this->load->view('post/edit', $data);
                $this->load->view('template/footer');
            }
        } else
            show_error('The post you are trying to edit does not exist.');
    }

    /*
     * Deleting post
     */
    function remove($id)
    {
        $post = $this->Post_model->get_post($id);

        // check if the post exists before trying to delete it
        if (isset($post['id'])) {
            $this->Post_model->delete_post($id);
            redirect('post/index');
        } else
            show_error('The post you are trying to delete does not exist.');
    }
}
