<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Guru extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Guru_model');
    }

    /*
     * Listing of guru
     */
    function index()
    {
        $data['guru'] = $this->Guru_model->get_all_guru();

        $data['_view'] = 'guru/index';
        $this->load->view('template/header');
        $this->load->view('template/sidebar');
        $this->load->view('guru/index', $data);
        $this->load->view('template/footer');
    }

    /*
     * Adding a new guru
     */
    function add()
    {
        $config['upload_path']          = './uploads/guru/';
		$config['allowed_types']        = 'jpg|jpeg'; // izinkan hanya file png agar kualitasnya bagus
        $config['max_size']             = 1000; // batasi ukurannya
		$config['overwrite']        	= TRUE; // hanya ada 1 file foto guru
		$config['file_name']             = $this->input->post('no_hp'); // ubah namanya
        
		// $config['max_width']            = 1024;
		// $config['max_height']           = 768;

		$this->load->library('upload', $config);
        $this->load->library('form_validation');

        $this->form_validation->set_rules('email', 'Email', 'valid_email|required');
        $this->form_validation->set_rules('password', 'Password', 'required');

        if ($this->form_validation->run()) {
            if (!$this->upload->do_upload('userfile')) {
				// jika upload gagal
                $error = array('error' => $this->upload->display_errors());
                $ext = '.jpg';
                // print_r($error);
            } else {
                // jika upload sukses
                $data = array('upload_data' => $this->upload->data());
                $ext = $data['upload_data']['file_ext'];
                // print_r($data);
            };

            $params = array(
                'password' => $this->input->post('password'),
                'nomor_induk' => $this->input->post('nomor_induk'),
                'foto' => $this->input->post('no_hp').$ext, // ganti nama file foto dengan nomor hp masing2 guru
                'first_name' => $this->input->post('first_name'),
                'no_hp' => $this->input->post('no_hp'),
                'email' => $this->input->post('email'),
            );

            // print_r($params);
            $guru_id = $this->Guru_model->add_guru($params);
            redirect('guru/index');
        } else {
            $data['_view'] = 'guru/add';
            $this->load->view('template/header');
            $this->load->view('template/sidebar');
            $this->load->view('guru/add', $data);
            $this->load->view('template/footer');
        }
    }

    /*
     * Editing a guru
     */
    function edit($id)
    {
        // check if the guru exists before trying to edit it
        $data['guru'] = $this->Guru_model->get_guru($id);

        if (isset($data['guru']['id'])) {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('email', 'Email', 'valid_email|required');
            $this->form_validation->set_rules('password', 'Password', 'required');

            if ($this->form_validation->run()) {
                $params = array(
                    'password' => $this->input->post('password'),
                    'nomor_induk' => $this->input->post('nomor_induk'),
                    'foto' => $this->input->post('foto'),
                    'first_name' => $this->input->post('first_name'),
                    'no_hp' => $this->input->post('no_hp'),
                    'email' => $this->input->post('email'),
                );

                $this->Guru_model->update_guru($id, $params);
                redirect('guru/index');
            } else {
                $data['_view'] = 'guru/edit';
                $this->load->view('template/header');
                $this->load->view('template/sidebar');
                $this->load->view('guru/edit', $data);
                $this->load->view('template/footer');
            }
        } else
            show_error('The guru you are trying to edit does not exist.');
    }

    /*
     * Deleting guru
     */
    function remove($id)
    {
        $guru = $this->Guru_model->get_guru($id);

        // check if the guru exists before trying to delete it
        if (isset($guru['id'])) {
            $this->Guru_model->delete_guru($id);
            redirect('guru/index');
        } else
            show_error('The guru you are trying to delete does not exist.');
    }
}
