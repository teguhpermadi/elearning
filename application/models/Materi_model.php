<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Materi_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    

    function get_kelas_by_rombel()
    {
        $user_id = user_info()['id'];
        return $this->db->select('*')
        ->from('rombel')
        ->where('rombel.id_siswa', $user_id)
        ->join('kelas', 'kelas.id = rombel.id_kelas')
        ->get()->row_array();
    }

    function get_all_mapel()
    {
        $user_id = user_info()['id'];
        return $this->db->select('mapel.*')
        ->from('rombel')
        ->where('rombel.id_siswa', $user_id)
        ->join('kelas', 'kelas.id = rombel.id_kelas')
        ->join('pengajar', 'pengajar.id_kelas = kelas.id')
        ->join('mapel', 'mapel.id = pengajar.id_mapel')
        ->get()->result_array();
    }

    function get_post_by_auhtor_category_tag($author_id, $id_mapel, $id_kelas)
    {
        return $this->db->select('posts.*')
        ->from('posts')
        ->join('post_category', 'post_category.post_id = posts.id')
        ->join('post_tag', 'post_tag.post_id = posts.id')
        ->where('posts.author_id', $author_id)
        ->where('post_category.category_id', $id_mapel)
        ->where('post_tag.tag_id', $id_kelas)
        ->where('posts.published != 0')
        ->order_by('posts.id', 'desc')
        ->get()->result_array();

        // return $this->db->last_query();
    }

    function get_guru_by_mapel_kelas($id_mapel, $id_kelas)
    {
        return $this->db->select('users.*')
        ->from('pengajar')
        ->where('id_mapel', $id_mapel)
        ->where('id_kelas', $id_kelas)
        ->join('users', 'users.id = pengajar.id_guru')
        ->get()->row_array();
    }

    function count_materi_by_guru_mapel_kelas($id_guru, $id_mapel, $id_kelas)
    {
        return $this->db->select('*')
        ->from('posts')
        ->join('post_category', 'post_category.post_id = posts.id')
        ->join('post_tag', 'post_tag.post_id = posts.id')
        ->where('author_id', $id_guru)
        ->where('jenis', 'materi')
        ->where('post_category.category_id', $id_mapel)
        ->where('post_tag.tag_id', $id_kelas)
        ->get()->num_rows();
    }

    function count_tugas_by_guru_mapel_kelas($id_guru, $id_mapel, $id_kelas)
    {
        return $this->db->select('*')
        ->from('posts')
        ->join('post_category', 'post_category.post_id = posts.id')
        ->join('post_tag', 'post_tag.post_id = posts.id')
        ->where('author_id', $id_guru)
        ->where('jenis', 'tugas')
        ->where('post_category.category_id', $id_mapel)
        ->where('post_tag.tag_id', $id_kelas)
        ->get()->num_rows();
    }

    function count_tugas_dikerjakan($author_id, $id_mapel, $id_kelas)
    {
        $user_id = user_info()['id'];
        return $this->db->select('posts.id as post_id, attachfile.*')
        ->from('posts')
        ->join('post_category', 'post_category.post_id = posts.id')
        ->join('post_tag', 'post_tag.post_id = posts.id')
        ->where('posts.author_id', $author_id)
        ->where('post_category.category_id', $id_mapel)
        ->where('post_tag.tag_id', $id_kelas)
        ->where('posts.published != 0')
        ->join('attachfile', 'attachfile.post_id = posts.id')
        ->where('attachfile.milik', 'siswa')
        ->where('attachfile.author_id', $user_id)
        ->group_by('attachfile.post_id')
        ->get()->num_rows();
    }

    function tugas_dikerjakan()
    {
        $user_id = user_info()['id'];
        return $this->db->select('posts.id, posts.title, posts.published_at, mapel.nama as nama_mapel')
        ->from('attachfile')
        ->where('attachfile.author_id', $user_id)
        ->join('posts', 'posts.id = attachfile.post_id')
        ->join('post_category', 'post_category.post_id = posts.id')
        ->join('mapel', 'mapel.id = post_category.category_id')
        ->group_by('attachfile.post_id')
        ->get()
        ->result_array();
    }

    function tugas_belum_dikerjakan($id_kelas)
    {
        $user_id = user_info()['id'];
        $data = [];
        $tugas_sudah = $this->db->select('attachfile.post_id')
        ->from('attachfile')
        ->where('attachfile.author_id', $user_id)
        ->get()
        ->result_array();

        foreach ($tugas_sudah as $key => $value) {
            array_push($data, $value['post_id']);
        }

        if(!empty($data))
        {
            return $this->db->select('posts.id, posts.title, posts.published_at, mapel.nama as nama_mapel')
            ->from('post_tag')
            ->where('post_tag.tag_id', $id_kelas)
            ->join('posts', 'posts.id = post_tag.post_id', 'right')
            ->where('posts.jenis', 'tugas')
            ->where_not_in('posts.id', $data)
            ->join('post_category', 'post_category.post_id = posts.id')
            ->join('mapel', 'mapel.id = post_category.category_id')
            ->get()
            ->result_array();
        } else {
            return $this->db->select('posts.id, posts.title, posts.published_at, mapel.nama as nama_mapel')
            ->from('post_tag')
            ->where('post_tag.tag_id', $id_kelas)
            ->join('posts', 'posts.id = post_tag.post_id', 'right')
            ->where('posts.jenis', 'tugas')
            // ->where_not_in('posts.id', $data)
            ->join('post_category', 'post_category.post_id = posts.id')
            ->join('mapel', 'mapel.id = post_category.category_id')
            ->get()
            ->result_array();
        }

    }

}
